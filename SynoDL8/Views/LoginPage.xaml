<prism:VisualStateAwarePage
    x:Class="SynoDL8.Views.LoginPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SynoDL8.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:behavior="using:SynoDL8.Behaviors"
    xmlns:converter="using:SynoDL8.Converters"
    xmlns:prism="using:Microsoft.Practices.Prism.StoreApps"
    mc:Ignorable="d"
    prism:ViewModelLocator.AutoWireViewModel="True">
    
    <Page.Resources>
        <converter:FirstErrorConverter x:Key="FirstErrorConverter"/>
    </Page.Resources>

    <Grid x:Name="grid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <Hub x:Name="hub">
            <Hub.Header>
                <!-- Back button and page title -->
                <Grid x:Name="titlePanel">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!--<Button x:Name="backButton" Command="{Binding Path=GoBackCommand, ElementName=pageRoot}" Margin="0,0,39,0"
                            Style="{StaticResource NavigationBackButtonNormalStyle}"/>-->
                    <TextBlock x:Name="pageTitle" Grid.Column="1" x:Uid="applicationTitle" Text="SynoDL8"
                               IsHitTestVisible="false" Style="{StaticResource HeaderTextBlockStyle}"/>
                </Grid>
            </Hub.Header>

            <HubSection Background="DarkOrange" MinWidth="400" x:Name="orangeSection">
                <DataTemplate>
                </DataTemplate>
            </HubSection>
            <HubSection x:Name="formSection">
                <DataTemplate>
                    <StackPanel MinWidth="300">
                        <TextBox x:Uid="hostname" Header="Hostname"
                                 Text="{Binding Path=Credentials.Hostname, Mode=TwoWay}" IsEnabled="{Binding Path=Available}">
                            <i:Interaction.Behaviors>
                                <behavior:HighlightFormFieldOnErrors PropertyErrors="{Binding Path=Credentials.Errors[Hostname]}" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <TextBlock Style="{StaticResource ErrorMessageStyle}"
                                   Text="{Binding Credentials.Errors[Hostname], Converter={StaticResource FirstErrorConverter}}"
                                   TextWrapping="Wrap" />

                        <TextBox x:Uid="user" Header="User"
                                 Text="{Binding Path=Credentials.User, Mode=TwoWay}" IsEnabled="{Binding Path=Available}">
                            <i:Interaction.Behaviors>
                                <behavior:HighlightFormFieldOnErrors PropertyErrors="{Binding Path=Credentials.Errors[User]}" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <TextBlock Style="{StaticResource ErrorMessageStyle}"
                                   Text="{Binding Credentials.Errors[User], Converter={StaticResource FirstErrorConverter}}"
                                   TextWrapping="Wrap" />

                        <PasswordBox x:Uid="password" Header="Password"
                                     Password="{Binding Path=Credentials.Password, Mode=TwoWay}" IsEnabled="{Binding Path=Available}">
                            <i:Interaction.Behaviors>
                                <behavior:HighlightFormFieldOnErrors PropertyErrors="{Binding Path=Credentials.Errors[Password]}"
                                                                     OriginalStyleName="BasePasswordBoxStyle" HighlightStyleName="HighlightPasswordBoxStyle" />
                            </i:Interaction.Behaviors>
                        </PasswordBox>
                        <TextBlock Style="{StaticResource ErrorMessageStyle}"
                                   Text="{Binding Credentials.Errors[Password], Converter={StaticResource FirstErrorConverter}}"
                                   TextWrapping="Wrap" />

						<ProgressBar Visibility="{Binding Path=BusyV}" IsIndeterminate="True"/>

                        <Button Command="{Binding Path=SigninCommand}" Foreground="White" Margin="0 10" x:Uid="signin" Content="Sign in" HorizontalAlignment="Right"/>

                        <TextBlock Foreground="Red" FontWeight="SemiBold" Text="{Binding Path=SigninError}"/>
                    </StackPanel>
                </DataTemplate>
            </HubSection>
        </Hub>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LayoutGroup">
                <VisualState x:Name="NormalLayout"/>
                <VisualState x:Name="PortraitLayout">
                	<Storyboard>
                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Hub.Orientation)" Storyboard.TargetName="hub">
                			<DiscreteObjectKeyFrame KeyTime="0">
                				<DiscreteObjectKeyFrame.Value>
                					<Orientation>Vertical</Orientation>
                				</DiscreteObjectKeyFrame.Value>
                			</DiscreteObjectKeyFrame>
                		</ObjectAnimationUsingKeyFrames>
                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="grid">
                			<DiscreteObjectKeyFrame KeyTime="0">
                				<DiscreteObjectKeyFrame.Value>
                					<SolidColorBrush Color="DarkOrange"/>
                				</DiscreteObjectKeyFrame.Value>
                			</DiscreteObjectKeyFrame>
                		</ObjectAnimationUsingKeyFrames>
                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background)" Storyboard.TargetName="formSection">
                			<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}"/>
                		</ObjectAnimationUsingKeyFrames>
                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="formSection">
                			<DiscreteObjectKeyFrame KeyTime="0">
                				<DiscreteObjectKeyFrame.Value>
                					<HorizontalAlignment>Stretch</HorizontalAlignment>
                				</DiscreteObjectKeyFrame.Value>
                			</DiscreteObjectKeyFrame>
                		</ObjectAnimationUsingKeyFrames>
                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="orangeSection">
                			<DiscreteObjectKeyFrame KeyTime="0">
                				<DiscreteObjectKeyFrame.Value>
                					<Visibility>Collapsed</Visibility>
                				</DiscreteObjectKeyFrame.Value>
                			</DiscreteObjectKeyFrame>
                		</ObjectAnimationUsingKeyFrames>
                	</Storyboard>
                </VisualState>
                <VisualState x:Name="MinimalLayout"/> <!-- Portrait layout is minimal enough -->
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</prism:VisualStateAwarePage>