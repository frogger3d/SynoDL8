<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="SynoDL8.View.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SynoDL8"
    xmlns:data="using:SynoDL8.Data"
    xmlns:common="using:SynoDL8.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding Path=Main, Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Label="Refresh" Icon="Refresh" Command="{Binding Path=ListCommand}"/>
            <AppBarButton Label="Versions" Command="{Binding VersionsCommand}" />
            <AppBarButton Label="Info" Command="{Binding InfoCommand}" />
        </CommandBar>
    </Page.BottomAppBar>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">

        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" x:Uid="applicationTitle" Text="SynoDL8"
                       IsHitTestVisible="false" Style="{StaticResource PageHeaderTextStyle}"/>
            <TextBlock Grid.Column="1" VerticalAlignment="Bottom" Text="{Binding Message}"/>
        </Grid>

        <Hub Grid.Row="1">
            <HubSection Header="Actions">
                <DataTemplate>
                    <VariableSizedWrapGrid MaximumRowsOrColumns="1" Orientation="Horizontal" HorizontalAlignment="Center" ItemWidth="200">
                        <VariableSizedWrapGrid.Resources>
                            <Style TargetType="Button">
                                <Setter Property="Margin" Value="2"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            </Style>
                        </VariableSizedWrapGrid.Resources>
                        <Button Command="{Binding ListCommand}" Content="List"/>
                        <TextBox Text="{Binding Url, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Command="{Binding CreateCommand}" Content="Create"/>
                    </VariableSizedWrapGrid>
                </DataTemplate>
            </HubSection>
            <HubSection Header="Downloads">
                <DataTemplate>
                    <ItemsControl ItemsSource="{Binding Content}" ItemTemplateSelector="{StaticResource ContentDataTemplateSelector}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsWrapGrid/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </DataTemplate>
            </HubSection>
        </Hub>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
